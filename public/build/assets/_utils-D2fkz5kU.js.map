{"version":3,"file":"_utils-D2fkz5kU.js","sources":["../../../core-js/_utils.ts"],"sourcesContent":["/**\n * Immutably sets a value inside an object. Like `lodash#set`, but returning a\n * new object. Treats nullish initial values as empty objects. Clones any\n * nested objects. Supports arrays, too.\n *\n * @param {Object}              object Object to set a value in.\n * @param {number|string|Array} path   Path in the object to modify.\n * @param {*}                   value  New value to set.\n * @return {Object} Cloned object with the new value set.\n */\nexport function setImmutably(\n  object: object,\n  path: number | string | Array<any>,\n  value: any,\n): object {\n  // Normalize path\n  path = Array.isArray(path) ? [...path] : [path];\n\n  // Shallowly clone the base of the object\n  object = Array.isArray(object) ? [...object] : { ...object };\n\n  const leaf = path.pop();\n\n  // Traverse object from root to leaf, shallowly cloning at each level\n  let prev = object;\n  for (const key of path) {\n    const lvl = prev[key];\n    prev = prev[key] = Array.isArray(lvl) ? [...lvl] : { ...lvl };\n  }\n\n  prev[leaf] = value;\n\n  return object;\n}\n\n/**\n * Debounce functions for better performance\n * Source: https://www.joshwcomeau.com/snippets/javascript/debounce/\n *\n * @param  {Function} fn The function to debounce\n * @param  {number} wait The time, in milliseconds, to wait before calling the function\n * @return {Function} The debounced function\n */\nexport const debounce = (callback, wait = 50) => {\n  let timeoutId = null;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => {\n      callback(...args);\n    }, wait);\n  };\n};\n\n/**\n * Throttle a function so that it is only called once within a given time interval.\n *\n * @param {Function} fn - The function to throttle\n * @param {Number} wait - The time interval, in milliseconds, to wait between calls to the function\n * @return {Function} - Returns a throttled version of the original function\n */\nexport function throttle(fn, wait = 20) {\n  let time = Date.now();\n  return function (...args) {\n    if (time + wait - Date.now() < 0) {\n      fn(...args);\n      time = Date.now();\n    }\n  };\n}\n\n/**\n * Convert a string to camelCase\n *\n * @param {string} text - The string to convert\n * @return {string} The camelCase string\n */\nexport function camelize(text: string) {\n  const a = text\n    .toLowerCase()\n    .replace(/[-_\\s.]+(.)?/g, (_, c) => (c ? c.toUpperCase() : ''));\n  return a.substring(0, 1).toLowerCase() + a.substring(1);\n}\n\n/**\n * Check if an object is empty\n *\n * @param {Object} obj - The object to check\n * @return {boolean} True if the object is empty, false otherwise\n */\nexport function isEmpty(obj: object) {\n  for (const prop in obj) {\n    if (Object.hasOwn(obj, prop)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Get color slug by color hex value.\n * Usually we don't want to save hex value from WP color palette, we want to save slug.\n *\n * @param colors - Colors array\n * @param color - Color string\n * @returns Color slug\n */\nexport const getColorSlugByColor = (\n  colors: { color: string; slug: string }[],\n  color: string,\n) => {\n  return colors.find((c: any) => c.color === color)?.slug;\n};\n\n/**\n * Get color by slug.\n * This is the opposite of getColorSlugByColor.\n * We want to use hex value for ColorPallete control, but we saved it as slug.\n *\n * @param colors - Colors array\n * @param slug - Color slug\n * @returns Color string\n */\nexport const getColorBySlug = (colors: any, slug: string) => {\n  return colors.find((color: any) => color.slug === slug)?.color;\n};\n"],"names":["setImmutably","object","path","value","leaf","prev","key","lvl","debounce","callback","wait","timeoutId","args","throttle","fn","time","isEmpty","obj","prop","getColorSlugByColor","colors","color","c","getColorBySlug","slug"],"mappings":"AAUO,SAASA,EACdC,EACAC,EACAC,EACQ,CAERD,EAAO,MAAM,QAAQA,CAAI,EAAI,CAAC,GAAGA,CAAI,EAAI,CAACA,CAAI,EAG9CD,EAAS,MAAM,QAAQA,CAAM,EAAI,CAAC,GAAGA,CAAM,EAAI,CAAE,GAAGA,CAAA,EAEpD,MAAMG,EAAOF,EAAK,IAAA,EAGlB,IAAIG,EAAOJ,EACX,UAAWK,KAAOJ,EAAM,CACtB,MAAMK,EAAMF,EAAKC,CAAG,EACpBD,EAAOA,EAAKC,CAAG,EAAI,MAAM,QAAQC,CAAG,EAAI,CAAC,GAAGA,CAAG,EAAI,CAAE,GAAGA,CAAA,CAC1D,CAEA,OAAAF,EAAKD,CAAI,EAAID,EAENF,CACT,CAUO,MAAMO,EAAW,CAACC,EAAUC,EAAO,KAAO,CAC/C,IAAIC,EAAY,KAChB,MAAO,IAAIC,IAAS,CAClB,OAAO,aAAaD,CAAS,EAC7BA,EAAY,OAAO,WAAW,IAAM,CAClCF,EAAS,GAAGG,CAAI,CAClB,EAAGF,CAAI,CACT,CACF,EASO,SAASG,EAASC,EAAIJ,EAAO,GAAI,CACtC,IAAIK,EAAO,KAAK,IAAA,EAChB,OAAO,YAAaH,EAAM,CACpBG,EAAOL,EAAO,KAAK,IAAA,EAAQ,IAC7BI,EAAG,GAAGF,CAAI,EACVG,EAAO,KAAK,IAAA,EAEhB,CACF,CAqBO,SAASC,EAAQC,EAAa,CACnC,UAAWC,KAAQD,EACjB,GAAI,OAAO,OAAOA,EAAKC,CAAI,EACzB,MAAO,GAIX,MAAO,EACT,CAUO,MAAMC,EAAsB,CACjCC,EACAC,IAEOD,EAAO,KAAME,GAAWA,EAAE,QAAUD,CAAK,GAAG,KAYxCE,EAAiB,CAACH,EAAaI,IACnCJ,EAAO,KAAMC,GAAeA,EAAM,OAASG,CAAI,GAAG"}